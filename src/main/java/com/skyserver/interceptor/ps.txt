ThreadLocal在拦截器的使用，可以获得当前登录的用户id等信息，处理相关逻辑。
ThreadLocal实现了线程隔离：每个线程有自己的存储区，只能存取自己的数据，可以保证线程安全，否则由于java本身的抢占机制会导致线程不安全。

而且，前端发送请求到后端再到前端整个过程都是由服务器分配的不同的单个线程处理的！！！线程响应结束了会返回给线程池，即一次请求对应一个线程。
ThreadLocal对应三个方法：get,set,remove

ThreadLocal存放从拦截器获取的数据，以后再用时，可以在这个线程中取出。

线程从拦截器开始，从拦截器结束，结束时要注意内存泄露。